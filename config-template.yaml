origin: http://localhost:3000 # for CORS
domain: localhost # for cookie setting
cert: cert/cert.pem
privKey: cert/key.pem
group-service:
  dbtype: MYSQL
  dbaddress: <USERNAME>:<PASSWORD>!@tcp(<HOSTNAME>:<PORT>)/<DBNAME>
  httpPort: "8081"
  httpsPort: "8091"
message-service:
  dbtype: MYSQL
  dbaddress: <USERNAME>:<PASSWORD>!@tcp(<HOSTNAME>:<PORT>)/<DBNAME>
  httpPort: "8082"
  httpsPort: "8092"
user-service:
  dbtype: MYSQL
  dbaddress: <USERNAME>:<PASSWORD>!@tcp(<HOSTNAME>:<PORT>)/<DBNAME>
  httpPort: "8083"
  httpsPort: "8093"
ws-service:
  dbtype: MYSQL
  dbaddress: <USERNAME>:<PASSWORD>!@tcp(<HOSTNAME>:<PORT>)/<DBNAME>
  httpPort: "8084"
  httpsPort: "8094"
search-service:
  addresses:
    - "http://<HOST>:<PORT>"
  username: <USERNAME>
  password: <PASSWORD>
  httpPort: "8085"
  httpsPort: "8095"
token-service:
  grpcPort: "9000"
  redisAddress: <HOST>:<PORT>
  redisPass: <REDIS_PASSWORD>
  accessPrivKey: <PRIVATE_KEY>.pem
  refreshSecret: secret
accessDuration: 1200s
refreshDuration: 86400s
authAddress: tokenservice:9000
aws-bucket: bucketname
brokerType: kafka
brokerAddresses:
  - "<HOST>:<PORT>"
emailFrom: <EMAIL_ADDRESS>
smtpHost: <SMTP_HOST>
smtpPort: <SMTP_PORT>
smtpUser: <SMTP_USER>
smtpPass: <SMTP_PASS>
templateDir: backend/user-service/templates