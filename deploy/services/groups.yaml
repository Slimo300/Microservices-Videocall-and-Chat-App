apiVersion: apps/v1
kind: Deployment
metadata:
  name: groupsdeployment
spec:
  replicas: 1
  selector:
    matchLabels:
      chat/app: groups
      chat/tier: api
  template:
    metadata:
      labels:
        chat/app: groups
        chat/tier: api
    spec:
      initContainers:
        - name: db-test
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z groupmysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']
        - name: tokenservice-test
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Token service deployment"; while ! nc -z tokenservice 9000; do sleep 1; printf "-"; done; echo -e "  >> Token Service has started";']
        - name: kafka-test
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Kafka broker"; while ! nc -z kafka 9092; do sleep 1; printf "-"; done; echo -e "  >> Kafka has started";']
      containers:
      - name: api
        imagePullPolicy: Never
        image: chat/groupservice
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8090
          name: https
        env:
        - name: MYSQL_ADDRESS
          value: chat:password12@tcp(groupmysql:3306)/chatapp
        - name: TOKEN_SERVICE_ADDRESS
          value: tokenservice:9000
        - name: ORIGIN
          value: http://www.chatapp.example
        - name: BROKER_ADDRESS
          value: kafka:9092
        envFrom:
        - secretRef:
            name: awssecrets
---
apiVersion: v1
kind: Service
metadata:
  name: groupservice
spec:
  selector:
    chat/app: groups
    chat/tier: api
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 8090
    targetPort: 8090
    name: https