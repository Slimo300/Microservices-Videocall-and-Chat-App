// Code generated by mockery v2.20.0. DO NOT EDIT.

package client

import (
	context "context"

	pb "github.com/Slimo300/chat-emailservice/pkg/client/pb"
	mock "github.com/stretchr/testify/mock"
)

// MockEmailClient is an autogenerated mock type for the EmailClient type
type MockEmailClient struct {
	mock.Mock
}

// SendResetPasswordEmail provides a mock function with given fields: ctx, in
func (_m *MockEmailClient) SendResetPasswordEmail(ctx context.Context, in *pb.EmailData) error {
	ret := _m.Called(ctx, in)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.EmailData) error); ok {
		r0 = rf(ctx, in)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendVerificationEmail provides a mock function with given fields: ctx, in
func (_m *MockEmailClient) SendVerificationEmail(ctx context.Context, in *pb.EmailData) error {
	ret := _m.Called(ctx, in)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb.EmailData) error); ok {
		r0 = rf(ctx, in)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockEmailClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEmailClient creates a new instance of MockEmailClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEmailClient(t mockConstructorTestingTNewMockEmailClient) *MockEmailClient {
	mock := &MockEmailClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
