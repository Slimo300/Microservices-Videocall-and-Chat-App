apiVersion: apps/v1
kind: Deployment
metadata:
    name: messages-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            chat/app: messages
            chat/tier: api
    template:
        metadata:
            labels:
                chat/app: messages
                chat/tier: api
        spec:
            containers:
                - env:
                    - name: MYSQL_DATABASE
                      valueFrom:
                        secretKeyRef:
                            key: MYSQL_DATABASE
                            name: mysql-creds
                    - name: MYSQL_USER
                      valueFrom:
                        secretKeyRef:
                            key: MYSQL_USER
                            name: mysql-creds
                    - name: MYSQL_PASSWORD
                      valueFrom:
                        secretKeyRef:
                            key: MYSQL_PASSWORD
                            name: mysql-creds
                    - name: MYSQL_ADDRESS
                      value: message-mysql:3306
                    - name: ORIGIN
                      value: https://www.relrel.org
                  envFrom:
                    - configMapRef:
                        name: broker-config
                    - secretRef:
                        name: storage-credentials
                  image: slimo300/message-service:1.0.3
                  imagePullPolicy: Always
                  name: message-service
                  ports:
                    - containerPort: 8080
                      name: http
                  volumeMounts:
                    - mountPath: /rsa
                      name: public-key
            initContainers:
                - command:
                    - sh
                    - -c
                    - echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z message-mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";
                  image: busybox:1.31
                  name: db-test
                - command:
                    - sh
                    - -c
                    - echo -e "Checking for the availability of RabbitMQ broker"; while ! nc -z rabbitmq-service 5672; do sleep 1; printf "-"; done; echo -e "  >> RabbitMQ has started";
                  image: busybox:1.31
                  name: rabbitmq-test
            volumes:
                - configMap:
                    name: public-key
                  name: public-key
---
apiVersion: v1
kind: Service
metadata:
    name: message-service
spec:
    ports:
        - name: http
          port: 8080
          targetPort: 8080
    selector:
        chat/app: messages
        chat/tier: api
